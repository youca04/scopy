diff --git a/qwt_polar_curve.cpp b/qwt_polar_curve.cpp
--- a/src/qwt_polar_curve.cpp
+++ b/src/qwt_polar_curve.cpp
@@ -16,6 +16,7 @@
 #include <qwt_curve_fitter.h>
 #include <qwt_clipper.h>
 #include <qpainter.h>
+#include <QPolygonF>

 static inline bool qwtInsidePole( const QwtScaleMap &map, double radius )
 {
@@ -435,7 +435,12 @@
     {
         double off = qCeil( qMax( qreal( 1.0 ), painter->pen().widthF() ) );
         clipRect = clipRect.toRect().adjusted( -off, -off, off, off );
-        polyline = QwtClipper::clipPolygonF( clipRect, polyline );
+
+#if QWT_VERSION < 0x060400
+	polyline = QwtClipper::clipPolygonF( clipRect, polyline );
+#else /* QWT_VERSION < 0x060400 */
+	polyline = QwtClipper::clippedPolygonF( clipRect, polyline );
+#endif /* QWT_VERSION < 0x060400 */
     }

     QwtPainter::drawPolyline( painter, polyline );

diff --git a/qwt_polar_fitter.cpp b/qwt_polar_fitter.cpp
--- a/src/qwt_polar_fitter.cpp
+++ b/src/qwt_polar_fitter.cpp
@@ -7,6 +7,7 @@
  *****************************************************************************/

 #include "qwt_polar_fitter.h"
+#include <QPolygonF>

 class QwtPolarFitter::PrivateData
 {
@@ -25,7 +25,7 @@ public:
    \param stepCount Number of points, that will be inserted between 2 points
    \sa setStepCount()
 */
-QwtPolarFitter::QwtPolarFitter( int stepCount )
+QwtPolarFitter::QwtPolarFitter( int stepCount ) : QwtCurveFitter(QwtCurveFitter::Polygon)
 {
     d_data = new PrivateData;
     d_data->stepCount = stepCount;

diff --git a/qwt_polar_fitter.h b/qwt_polar_fitter.h
--- a/src/qwt_polar_fitter.h
+++ b/src/qwt_polar_fitter.h
@@ -12,6 +12,7 @@
 #include "qwt_polar_global.h"
 #include <qwt_curve_fitter.h>

+class QPolygonF;
 /*!
   \brief A simple curve fitter for polar points

diff --git a/qwt_polar_grid.cpp b/qwt_polar_grid.cpp
--- a/src/qwt_polar_grid.cpp
+++ b/src/qwt_polar_grid.cpp
@@ -18,6 +18,7 @@
 #include <qpainter.h>
 #include <qpen.h>
 #include <float.h>
+#include <QPolygonF>

 static inline bool isClose( double value1, double value2 )
 {
@@ -726,8 +727,13 @@
             polygon[0] = pole.toPoint();
             polygon[1] = pos.toPoint();

-            if ( testDisplayFlag( ClipGridLines ) )
-                polygon = QwtClipper::clipPolygonF( canvasRect, polygon );
+#if QWT_VERSION < 0x060400
+	    if ( testDisplayFlag( ClipGridLines ) )
+		    polygon = QwtClipper::clipPolygonF( canvasRect, polygon );
+#else /* QWT_VERSION < 0x060400 */
+	    if ( testDisplayFlag( ClipGridLines ) )
+		    polygon = QwtClipper::clippedPolygonF( canvasRect, polygon );
+#endif /* QWT_VERSION < 0x060400 */

             QwtPainter::drawPolyline( painter, polygon );
         }

diff --git a/qwt_polar_spectrogram.cpp b/qwt_polar_spectrogram.cpp
--- a/src/qwt_polar_spectrogram.cpp
+++ b/src/qwt_polar_spectrogram.cpp
@@ -305,12 +305,8 @@ QImage QwtPolarSpectrogram::renderImage(
     QImage image( rect.size(), d_data->colorMap->format() == QwtColorMap::RGB
                   ? QImage::Format_ARGB32 : QImage::Format_Indexed8 );

-    const QwtInterval intensityRange = d_data->data->interval( Qt::ZAxis );
-    if ( !intensityRange.isValid() )
-        return image;
-
     if ( d_data->colorMap->format() == QwtColorMap::Indexed )
-        image.setColorTable( d_data->colorMap->colorTable( intensityRange ) );
+        image.setColorTable( d_data->colorMap->colorTable256());

     /*
      For the moment we only announce the composition of the image by
@@ -471,7 +467,7 @@ void QwtPolarSpectrogram::renderTile(
                 const double radius = radialMap.invTransform( r );

                 const double value = d_data->data->value( azimuth, radius );
-                *line++ = d_data->colorMap->colorIndex( intensityRange, value );
+                *line++ = d_data->colorMap->colorIndex(256, intensityRange, value );
             }
         }
     }
